#!/bin/bash
#
# Author: Juraj Marcin <juraj@jurajmarcin.com>
#
# Usage ./bluetoothstatus [OPTIONS] ACTION
#
# Options:
#
#   --icon-off ICON
#       bluetooth off (default: N)
#
#   --icon-on ICON
#       bluetooth on (default: Y)
#
#   --icon-connected ICON
#       other connected device (default: C)
#
#   --icon-mouse ICON
#       mouse connected (default: M)
#
#   --icon-audio ICON
#       audio device connected (default: A)
#
#   --icon-phone ICON
#       phone connected (default: P)
#
#   --color-off HEX_COLOR
#       bluetooth off color (default: none)
#
#   --color-on HEX_COLOR
#       bluetooth on color (default: none)
#
# Actions:
#
#   toggle
#       toggle bluetooth on and off
#
#   status
#       tail bluetooth status

ICON_OFF=N
ICON_ON=Y
ICON_CONNECTED=C
ICON_MOUSE=M
ICON_KEYBOARD=K
ICON_AUDIO=A
ICON_PHONE=P
COLOR_ON=
COLOR_OFF=

eval set -- `getopt --longoptions "icon-off:,icon-on:,icon-connected:,icon-mouse:,icon-keyboard:,icon-audio:,icon-phone:,color-off:,color-on:" -- "" "$@"`

while true; do
    case "$1" in
        --icon-off)
            ICON_OFF="$2"
            shift 2
            ;;
        --icon-on)
            ICON_ON="$2"
            shift 2
            ;;
        --icon-connected)
            ICON_CONNECTED="$2"
            shift 2
            ;;
        --icon-mouse)
            ICON_MOUSE="$2"
            shift 2
            ;;
        --icon-keyboard)
            ICON_KEYBOARD="$2"
            shift 2
            ;;
        --icon-audio)
            ICON_AUDIO="$2"
            shift 2
            ;;
        --icon-phone)
            ICON_PHONE="$2"
            shift 2
            ;;
        --color-off)
            COLOR_OFF="$2"
            shift 2
            ;;
        --color-on)
            COLOR_ON="$2"
            shift 2
            ;;
        "--")
            shift
            break
            ;;
    esac
done

ACTION="$1"

bt_tail() {
    bluetoothctl | while read -r; do
        if [ "$(systemctl is-active "bluetooth.service")" = "active" ] \
            && bluetoothctl show | grep -q "Powered: yes"; then

            devices=""

            bluetoothctl devices Connected | grep Device | {
                while read -r class addr name; do
                    device_info=$(bluetoothctl info "$addr")
                    if echo "$device_info" | grep -q "Icon: input-mouse"; then
                        devices="$devices$ICON_MOUSE"
                    elif echo "$device_info" | grep -q "Icon: input-keyboard"; then
                        devices="$devices$ICON_KEYBOARD"
                    elif echo "$device_info" | grep -q "Icon: audio-card"; then
                        devices="$devices$ICON_AUDIO"
                    else
                        devices="$devices$ICON_CONNECTED"
                    fi
                done

                label="${devices:-$ICON_ON}"
                color="$COLOR_ON"
                if [ -n "$color" ]; then
                    echo "%{F$color}$label%{F-}"
                else
                    echo "$label"
                fi
            }

        else
            label="$ICON_OFF"
            color="$COLOR_OFF"
            if [ -n "$color" ]; then
                echo "%{F$color}$label%{F-}"
            else
                echo "$label"
            fi
        fi
    done
}

bt_toggle() {
    if bluetoothctl show | grep -q "Powered: no"; then
        bluetoothctl power on >& /dev/null
    else
        bluetoothctl power off >& /dev/null
    fi
}

case "$1" in
    toggle)
        bt_toggle;;
    status)
        bt_tail;;
    *)
        echo "Action not supported"
        exit 1
        ;;
esac
